On the dataset_run we are using open3d to get the normals for the points. This is done using the k-nearest
neighbours.
2 methods to find the correct linear-time gaussian process approx.
    Cholesky when possible
    Stochastic Gradient descent otherwise (it usually works best for number of points N approx 20m)





    """
    #Test for loading files and stuff

    p = load_npy(r"C:\Users\joaot\Desktop\Universidade\4oAno2oSemestre\Hands-On_AI_3D_Vision\Project_11\ABCdataset\abc\04_pts\00010218_4769314c71814669ba5d3512_trimesh_013.xyz.npy")
    print("Loaded points shape:", p.shape)
    pointc = array2pcld(p)
    o3d.visualization.draw_geometries([pointc], window_name="3D Point Cloud")
    p,f,mesh = load_ply(r"C:\Users\joaot\Desktop\Universidade\4oAno2oSemestre\Hands-On_AI_3D_Vision\Project_11\ABCdataset\abc\03_meshes\00010218_4769314c71814669ba5d3512_trimesh_013.ply")
    print("Loaded points shape:", p.shape)
    print("Loaded faces shape:", f.shape)
    o3d.visualization.draw_geometries([mesh], window_name="3D Viewer")
    """
